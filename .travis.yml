language: cpp

jobs:
  include:
    - os: linux
      dist: bionic
      compiler: gcc
      addons:
        apt:
          sources:
          - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main'
            key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - gcc-9
            - g++-9
            - gnuplot
            - build-essential
            - libgl1-mesa-dev
            - git-lfs
    - os: linux
      dist: bionic
      compiler: clang
      addons:
        apt:
         sources:
          - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main'
            key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          - sourceline: 'ppa:ubuntu-toolchain-r/test'
         packages:
            - clang-9
            - gnuplot
            - build-essential
            - libgl1-mesa-dev
            - git-lfs
    - os: osx
      compiler: clang
      addons:
        homebrew:
          packages:
            - gnuplot
            - glib
            - gettext
            - pkg-config
            - git-lfs
            - llvm@9
    - os: osx
      compiler: gcc
      addons:
        homebrew:
          packages:
            - gnuplot
            - glib
            - gettext
            - pkg-config
            - git-lfs
            - gcc@9
  allow_failures:
    - os: osx
    - compiler: clang

before_install:
  # pull lfs files
  - git lfs pull
  # first we create a directory for the CMake binaries
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
  # we use wget to fetch the cmake binaries
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then travis_retry wget --no-check-certificate https://github.com/Kitware/CMake/releases/download/v3.16.5/cmake-3.16.5-Darwin-x86_64.tar.gz; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then tar -xvf cmake-3.16.5-Darwin-x86_64.tar.gz > /dev/null; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then mv cmake-3.16.5-Darwin-x86_64 cmake-install; fi

  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then travis_retry wget --no-check-certificate https://github.com/Kitware/CMake/releases/download/v3.16.5/cmake-3.16.5-Linux-x86_64.tar.gz; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then tar -xvf cmake-3.16.5-Linux-x86_64.tar.gz > /dev/null; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then mv cmake-3.16.5-Linux-x86_64 cmake-install; fi
  # add both the top-level directory and the bin directory from the archive
  # to the system PATH. By adding it to the front of the path we hide the
  # preinstalled CMake with our own.
  - PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH
  # don't forget to switch back to the main build directory once you are done
  - cd ${TRAVIS_BUILD_DIR}

install:
  # We installed later compilers above, now we need to ensure they are the default.
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
    export PATH="$(brew --prefix llvm)/bin:$PATH";
    fi
  # /usr/bin/gcc points to an older compiler on both Linux and macOS.
  - if [ "$CXX" = "g++" ]; then export CXX=`which g++-9` CC=`which gcc-9`; fi
  # /usr/bin/clang points to an older compiler on both Linux and macOS.
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      if [ "$CXX" = "clang++" ]; then export CXX=`which clang++-9` CC=`which clang-9`; fi;
    fi
  - echo ${CC}
  - echo ${CXX}
  - ${CXX} --version
  - cmake --version

before_script:
  - mkdir -p build && cd build
  - cmake -DCMAKE_BUILD_TYPE=Debug ..

script:
  - make -j
  - ctest -j -V
